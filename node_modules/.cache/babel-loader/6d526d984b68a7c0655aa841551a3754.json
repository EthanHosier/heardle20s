{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/2010s-heardle/src/components/Body.js\",\n  _s = $RefreshSig$();\nimport { faCirclePlay, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { useState, useRef } from 'react';\nimport raw from '../rsc/songs.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUM_OF_BARS = 6;\nconst Body = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [guesses, setGuesses] = useState(new Array(NUM_OF_BARS));\n  const [guessNum, setGuessNum] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [songMatches, setSongMatches] = useState([]);\n  const searchRef = useRef();\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      let s = JSON.parse(text);\n      setSongs(s);\n      setSongMatches(s);\n    });\n    setGuesses([\"\", \"\", \"\", \"\", \"\", \"\"]);\n  }, []);\n\n  //runs every time current guess changes (TODO: Searches for matches)\n  useEffect(() => {\n    console.log(currentGuess);\n    console.log(songMatches[0]);\n    setSongMatches(songMatches.filter(s => {\n      s.artist.includes(currentGuess) || s.song.includes(currentGuess);\n    }));\n  }, [currentGuess]);\n  useEffect(() => {\n    console.log(songs[0].artist);\n  }, [songMatches]);\n  useEffect(() => {\n    console.log(songs);\n  }, [songs]);\n  const onSkip = () => {\n    setGuesses(guesses.map((e, i) => {\n      return i == guessNum ? \"SKIPPED\" : e;\n    }));\n    setGuessNum(guessNum + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: guesses.map((g, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `guess-box ${guessNum == i ? \"active\" : \"\"}`,\n          children: g\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contents\",\n        children: [...Array(6)].map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `p${i}`,\n          className: \"partial-bar\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"play-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlay,\n        id: \"play-icon\",\n        onClick: () => console.log(\"play\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search-songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"searchbar\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          id: \"search-icon\",\n          icon: faMagnifyingGlass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchbar\",\n        ref: searchRef,\n        autoComplete: \"off\",\n        onChange: e => setCurrentGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"submit-btns-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"skip\",\n        onClick: onSkip,\n        children: [\"Skip (+\", guessNum, \"s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Body, \"UktnrNEsGd0uIUpZBkOq9gnZUss=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["faCirclePlay","faMagnifyingGlass","FontAwesomeIcon","React","useEffect","useState","useRef","raw","NUM_OF_BARS","Body","songs","setSongs","guesses","setGuesses","Array","guessNum","setGuessNum","currentGuess","setCurrentGuess","songMatches","setSongMatches","searchRef","fetch","then","r","text","s","JSON","parse","console","log","filter","artist","includes","song","onSkip","map","e","i","g","x","target","value"],"sources":["/home/ethanh/Desktop/2010s-heardle/src/components/Body.js"],"sourcesContent":["import { faCirclePlay, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react'\nimport { useState, useRef } from 'react';\n\nimport raw from '../rsc/songs.txt';\n\nconst NUM_OF_BARS = 6\nconst Body = () => {\n\n  const [songs, setSongs] = useState([])\n  const [guesses, setGuesses] = useState(new Array(NUM_OF_BARS));\n  const [guessNum, setGuessNum] = useState(0)\n  const [currentGuess, setCurrentGuess] = useState(\"\")\n  const [songMatches, setSongMatches] = useState([])\n\n  const searchRef = useRef();\n\n  useEffect(() =>{\n    fetch(raw)\n        .then(r => r.text())\n        .then(text => {\n          let s = JSON.parse(text);\n          setSongs(s);\n          setSongMatches(s)\n        });\n    setGuesses([\"\",\"\",\"\",\"\",\"\",\"\"])\n  }, [])\n\n  //runs every time current guess changes (TODO: Searches for matches)\n  useEffect(() =>{\n    console.log(currentGuess)\n    console.log(songMatches[0])\n    setSongMatches(songMatches.filter(s => {\n      s.artist.includes(currentGuess) || s.song.includes(currentGuess)\n    }));\n  },[currentGuess])\n\n  useEffect(() =>{\n    console.log(songs[0].artist)\n  }, [songMatches])\n\n  useEffect(() =>{\n    console.log(songs)\n  },[songs])\n\n  const onSkip = () =>{\n    setGuesses(guesses.map((e,i) => {\n      return i == guessNum? \"SKIPPED\" : e;\n    }))\n    setGuessNum(guessNum + 1)\n  }\n\n  return (\n    <>\n      <div className='bars'>\n        {guesses.map((g,i) =>{\n          return  <div className={`guess-box ${(guessNum == i) ? \"active\":\"\"}`} key={i}>{g}</div>\n        })}\n      </div>\n      \n      <div id=\"progress-bar\">\n        <div id=\"contents\">\n          {[...Array(6)].map((x, i) =>\n            <div id={`p${i}`} key={i} className=\"partial-bar\"/>\n          )}\n        </div>\n      </div>\n      \n      <button id=\"play-btn\">\n        <FontAwesomeIcon icon = {faCirclePlay} id=\"play-icon\" onClick={() => console.log(\"play\")}/>\n      </button>\n\n      <div id=\"search-songs\">\n        <label htmlFor=\"searchbar\">\n          <FontAwesomeIcon id=\"search-icon\" icon={faMagnifyingGlass} />\n        </label>\n        <input\n        type=\"text\"\n        id=\"searchbar\"\n        ref={searchRef}\n        autoComplete=\"off\"\n        onChange={(e) => setCurrentGuess(e.target.value)}\n        />\n      </div>\n\n      <div id=\"submit-btns-container\">\n        <button id=\"skip\" onClick={onSkip}>Skip (+{guessNum}s)</button>\n        <button id=\"submit\">Submit</button>\n      </div>\n    </>\n  )\n}\n\nexport default Body"],"mappings":"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"},"metadata":{},"sourceType":"module"}