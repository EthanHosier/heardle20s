{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect, useState } from \"react\";\nimport YouTube from 'react-youtube';\nimport raw from './rsc/days-songs.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EMPTY_SCORES_OBJ = {\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  \"X\": 0\n};\nconst STARTING_POINT = 1667606400000;\nconst NUM_MS_IN_DAY = 86400000;\nconst OPTS = {\n  width: \"0\",\n  height: \"0\"\n};\nfunction App() {\n  _s();\n  const {\n    setHasPlayedToday,\n    setIsCorrect,\n    playerRef,\n    correctSong,\n    setCorrectSong,\n    setIsPlaying,\n    setDuration,\n    duration\n  } = useGlobal();\n  const [t, setT] = useState(false);\n  const [ytReady, setYtReady] = useState(false);\n  const getCorrectSongIndex = () => {\n    const today = new Date();\n    return Math.floor((today.getTime() - STARTING_POINT) / NUM_MS_IN_DAY);\n  };\n  useEffect(() => {\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"));\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"));\n    const wonLast = JSON.parse(localStorage.getItem(\"won-last\"));\n    if (isToday(lastPlayed)) {\n      setHasPlayedToday(true);\n      resetStoredGuesses();\n      setIsCorrect(wonLast);\n      return;\n    }\n    if (!isToday(lastStarted)) {\n      resetStoredGuesses();\n    }\n    localStorage.setItem(\"last-started\", new Date());\n\n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ));\n\n    //reset guesses\n  }, []);\n  const isToday = someDate => {\n    const today = new Date();\n    return (someDate === null || someDate === void 0 ? void 0 : someDate.getDate()) == today.getDate() && (someDate === null || someDate === void 0 ? void 0 : someDate.getMonth()) == today.getMonth() && (someDate === null || someDate === void 0 ? void 0 : someDate.getFullYear()) == today.getFullYear();\n  };\n  const resetStoredGuesses = () => {\n    localStorage.setItem(\"guesses\", JSON.stringify(['', '', '', '', '', '']));\n  };\n  const onReady = () => {\n    const ip = playerRef.current.internalPlayer;\n    ip.playVideo();\n  };\n  const onStateChange = e => {\n    if (e.data == 2) {\n      setIsPlaying(false);\n      return;\n    }\n    if (e.data == 1) {\n      setIsPlaying(true);\n      return;\n    }\n    if (e.data != -1 || ytReady) return;\n    if (!t) {\n      setT(true);\n      return;\n    }\n    const ip = playerRef.current.internalPlayer;\n    const getDuration = (async () => {\n      const durationPromise = playerRef.current.internalPlayer.getDuration();\n      durationPromise.then(d => {\n        setDuration(Math.floor(d - correctSong.offset));\n        setYtReady(true);\n      });\n    })();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: correctSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(YouTube, {\n        opts: OPTS,\n        onReady: onReady,\n        videoId: correctSong.id,\n        ref: playerRef,\n        onStateChange: onStateChange,\n        id: \"yt player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), !ytReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n}\n_s(App, \"rJGSNp/qg/4LdunPdtgnNvvJ9nM=\", false, function () {\n  return [useGlobal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","useGlobal","useEffect","useState","YouTube","raw","EMPTY_SCORES_OBJ","STARTING_POINT","NUM_MS_IN_DAY","OPTS","width","height","App","setHasPlayedToday","setIsCorrect","playerRef","correctSong","setCorrectSong","setIsPlaying","setDuration","duration","t","setT","ytReady","setYtReady","getCorrectSongIndex","today","Date","Math","floor","getTime","lastStarted","localStorage","getItem","lastPlayed","wonLast","JSON","parse","isToday","resetStoredGuesses","setItem","stringify","someDate","getDate","getMonth","getFullYear","onReady","ip","current","internalPlayer","playVideo","onStateChange","e","data","getDuration","durationPromise","then","d","offset","id"],"sources":["/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/App.js"],"sourcesContent":["import Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect,useState } from \"react\";\nimport YouTube from 'react-youtube';\nimport raw from './rsc/days-songs.txt';\n\n\nconst EMPTY_SCORES_OBJ = \n    {\n        1:0,\n        2:0,\n        3:0,\n        4:0,\n        5:0,\n        6:0,\n        \"X\":0\n    }\n\nconst STARTING_POINT = 1667606400000;\nconst NUM_MS_IN_DAY = 86400000;\nconst OPTS = {width: \"0\", height:\"0\"}\n\nfunction App() {\n\n  const {setHasPlayedToday,setIsCorrect,playerRef, correctSong, setCorrectSong, setIsPlaying, setDuration,duration} = useGlobal();\n  const [t,setT] = useState(false)\n  const [ytReady, setYtReady] = useState(false);\n\n\n  const getCorrectSongIndex = () =>{\n    const today = new Date();\n    return Math.floor((today.getTime() - STARTING_POINT) / NUM_MS_IN_DAY)\n  }\n\n  useEffect(() =>{\n\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"))\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"))\n    const wonLast = JSON.parse(localStorage.getItem(\"won-last\"));\n\n    if(isToday(lastPlayed)){\n        setHasPlayedToday(true);\n        resetStoredGuesses();\n        setIsCorrect(wonLast)\n        return\n    }\n\n    if(!isToday(lastStarted)){\n        resetStoredGuesses();\n    }\n\n    localStorage.setItem(\"last-started\", new Date())\n    \n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ))\n\n    //reset guesses\n  \n    \n  \n},[])\n\n\n  const isToday = (someDate) => {\n    const today = new Date()\n    return someDate?.getDate() == today.getDate() &&\n      someDate?.getMonth() == today.getMonth() &&\n      someDate?.getFullYear() == today.getFullYear()\n  }\n  const resetStoredGuesses = () =>{\n    localStorage.setItem(\"guesses\", JSON.stringify(['','','','','','']))\n}\n\n  const onReady = () =>{\n    const ip = playerRef.current.internalPlayer;\n    ip.playVideo();\n\n  }\n\n  const onStateChange =(e) =>{\n    if(e.data ==2){\n      setIsPlaying(false)\n      return\n    }\n    \n    \n    if(e.data == 1) {\n      setIsPlaying(true)\n      return\n    }\n    \n    if(e.data != -1 || ytReady) return\n    if(!t){\n      setT(true)\n      return\n   }\n\n   const ip = playerRef.current.internalPlayer;\n   const getDuration = (async() =>{\n    const durationPromise = playerRef.current.internalPlayer.getDuration()\n    durationPromise.then((d)=>{\n      setDuration(Math.floor(d - correctSong.offset))\n      setYtReady(true)\n    }\n    )})();\n   \n   \n\n  } \n\n  return ( \n    <>\n\n    {correctSong? \n    <div id=\"App\">\n\n      <YouTube opts={OPTS} onReady={onReady} videoId={correctSong.id} ref={playerRef} onStateChange={onStateChange} id=\"yt player\" />\n      {!ytReady\n      ?<div id=\"loader-container\"><div className=\"loader\"></div></div>\n      : <Layout />\n      }\n      \n    </div>\n    \n    : <></>\n}\n\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}