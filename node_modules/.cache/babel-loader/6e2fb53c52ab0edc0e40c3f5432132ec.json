{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useGlobal from '../hooks/useGlobal';\nimport ProgressBar from './ProgressBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleStop, faCirclePlay } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Player = _ref => {\n  _s();\n  let {\n    guessNum\n  } = _ref;\n  const [timeoutID, setTimeoutID] = useState();\n  const [timeStarted, setTimeStarted] = useState(new Date());\n  const {\n    CORRECT_SONG,\n    isPlaying,\n    setIsPlaying,\n    playerRef,\n    setHasPlayedToday,\n    hasPlayedToday,\n    duration\n  } = useGlobal();\n\n  //handles song having been played for allocated time\n\n  const stopSong = () => {\n    clearTimeout(timeoutID);\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n  };\n  const playSong = () => {\n    playerRef.current.internalPlayer.playVideo();\n  };\n  //guess of \"X\" corresponds to failure to guess\n  const updateStats = g => {\n    const stats = JSON.parse(localStorage.getItem(\"scores\"));\n    stats[g] += 1;\n    localStorage.setItem(\"scores\", JSON.stringify(stats));\n  };\n\n  /*\n    useEffect(() => {\n      console.log(timeoutID)\n    }, [timeoutID])\n    */\n  const getGuessTime = gn => {\n    //returns guess-time for corresponding guess num in ms\n    return (1 + gn * (gn + 1) / 2) * 1000;\n  };\n  const onPlayClicked = () => {\n    if (!isPlaying) {\n      // play\n      playSong();\n      return;\n    }\n    //stop song\n    stopSong();\n  };\n  useEffect(() => {\n    playerRef.current.internalPlayer.setVolume(100);\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n    return () => {\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(isPlaying);\n    if (!isPlaying) return;\n    let playFor = guessNum !== undefined ? getGuessTime(guessNum) : duration * 1000;\n    setTimeoutID(setTimeout(stopSong, playFor)); //guess time secs -> ms\n    setTimeStarted(new Date());\n  }, [isPlaying]);\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(() => {\n    if (guessNum == 0 || guessNum == undefined || !isPlaying) return; //when guessNum is first set\n    clearTimeout(timeoutID);\n    if (guessNum > 5) {\n      clearTimeout(timeoutID);\n      playerRef.current.internalPlayer.pauseVideo();\n      playerRef.current.internalPlayer.playVideo();\n      setHasPlayedToday(true);\n      updateStats(\"X\");\n      return;\n    }\n    let timeRemaining = getGuessTime(guessNum) - (new Date() - timeStarted);\n    setTimeoutID(setTimeout(stopSong, timeRemaining));\n  }, [guessNum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      isPlaying: isPlaying,\n      guessNum: guessNum,\n      duration: guessNum === undefined ? duration : 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isPlaying ? faCircleStop : faCirclePlay,\n        id: \"play-icon\",\n        onClick: onPlayClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Player, \"C1IAu1cYGo4+2SdIVjdPmCBZ17o=\", false, function () {\n  return [useGlobal];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useGlobal","ProgressBar","FontAwesomeIcon","faCircleStop","faCirclePlay","Player","guessNum","timeoutID","setTimeoutID","timeStarted","setTimeStarted","Date","CORRECT_SONG","isPlaying","setIsPlaying","playerRef","setHasPlayedToday","hasPlayedToday","duration","stopSong","clearTimeout","current","internalPlayer","pauseVideo","seekTo","offset","playSong","playVideo","updateStats","g","stats","JSON","parse","localStorage","getItem","setItem","stringify","getGuessTime","gn","onPlayClicked","setVolume","console","log","playFor","undefined","setTimeout","timeRemaining"],"sources":["/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/components/Player.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport useGlobal from '../hooks/useGlobal';\nimport ProgressBar from './ProgressBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleStop, faCirclePlay } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({guessNum}) => {\n  const [timeoutID, setTimeoutID] = useState()\n  const [timeStarted, setTimeStarted] = useState(new Date())\n\n  const {CORRECT_SONG, isPlaying,setIsPlaying,playerRef, setHasPlayedToday, hasPlayedToday, duration} = useGlobal();\n\n  //handles song having been played for allocated time\n  \n  \n  const stopSong = () => {\n\n    clearTimeout(timeoutID);\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n  }\n\n  const playSong = () =>{\n    playerRef.current.internalPlayer.playVideo();\n    \n  }\n //guess of \"X\" corresponds to failure to guess\n const updateStats = (g)=>{\n  const stats = JSON.parse(localStorage.getItem(\"scores\"))\n  stats[g] +=1\n  localStorage.setItem(\"scores\",JSON.stringify(stats));\n}\n\n\n/*\n  useEffect(() => {\n    console.log(timeoutID)\n  }, [timeoutID])\n  */\n  const getGuessTime = (gn) =>{ //returns guess-time for corresponding guess num in ms\n    return (1 + gn*(gn+1)/2)*1000 \n  }\n  \n  const onPlayClicked = () =>{\n    if(!isPlaying){ // play\n      playSong();\n      return\n    }\n    //stop song\n    stopSong();\n    \n  }\n  \n  useEffect(()=>{\n    playerRef.current.internalPlayer.setVolume(100);\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n\n\n    return () => {\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset)\n    }\n  },[])\n  \n \n \n  useEffect(() =>{\n    console.log(isPlaying)\n    if (!isPlaying) return;\n    let playFor = guessNum !== undefined? getGuessTime(guessNum):duration*1000\n    setTimeoutID(setTimeout(stopSong,playFor)) //guess time secs -> ms\n    setTimeStarted(new Date())\n  }, [isPlaying])\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(()=>{\n    if(guessNum == 0 || guessNum == undefined || !isPlaying) return //when guessNum is first set\n    clearTimeout(timeoutID);\n    \n    if(guessNum > 5) \n    {\n      clearTimeout(timeoutID); \n      playerRef.current.internalPlayer.pauseVideo();\n      playerRef.current.internalPlayer.playVideo();\n\n      setHasPlayedToday(true)\n      updateStats(\"X\")\n      return\n    }\n\n    let timeRemaining = getGuessTime(guessNum) - ((new Date()) - timeStarted);\n    setTimeoutID(setTimeout(stopSong,timeRemaining))\n  }, [guessNum])\n\n\n\n  return (\n    <>\n      <ProgressBar isPlaying={isPlaying} guessNum={guessNum} duration={guessNum === undefined? duration: 16 }/>\n      <button className=\"play-btn\">\n        <FontAwesomeIcon icon = {isPlaying? faCircleStop : faCirclePlay} id=\"play-icon\" onClick={onPlayClicked}/>\n      </button>\n    </>\n    )\n}\n\nexport default Player"],"mappings":"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"},"metadata":{},"sourceType":"module"}