{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/1.1.2010s-heardle/src/components/SongPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport useGlobal from '../hooks/useGlobal';\nimport Player from './Player';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlay } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPTS = {\n  width: \"0\",\n  height: \"0\"\n};\nconst CORRECT_H1 = \"Well Done!\";\nconst CORRECT_H2 = \"You correctly guessed today's 2010s Heardle. Come back tomorrow to keep the current streak!\";\nconst INCORRECT_H1 = \"Better luck next time!\";\nconst INCORRECT_H2 = \"You didn't get today's 2010s Heardle, but try again tomorrow!\";\nconst SongPage = () => {\n  _s();\n  const {\n    CORRECT_SONG,\n    isCorrect\n  } = useGlobal();\n  const [isPlaying, setIsPlaying] = useState(true);\n  const imgURL = `https://img.youtube.com/vi/${CORRECT_SONG.id}/maxresdefault.jpg`;\n  const openInNewTab = url => {\n    window.open(url, '_blank', 'noopener,noreferrer');\n  };\n\n  /*TODO:\n  Also, work out how to re-use songbar logic (number of bars as a parameter [can just use = 1 in songpage, then remove % of the first index so automatically fills rest of space] and then length)\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"songpage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: console.log(isCorrect)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"song-box\",\n      onClick: () => openInNewTab(`https://youtu.be/${CORRECT_SONG.id}&t=${Math.floor(CORRECT_SONG.offset)}`),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgURL,\n        id: \"thumbnail-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"name-and-artist\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: CORRECT_SONG.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"song-artist\",\n          children: CORRECT_SONG.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/1384/1384060.png\",\n        id: \"yt-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Better luck next time! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dashes-container\",\n      children: [...Array(6)].map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dash\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You didn't get today's 2010s Heardle, but try again tomorrow!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlay,\n        id: \"play-icon\",\n        onClick: () => setIsPlaying(!isPlaying)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(SongPage, \"Ady0yP6fF7TjrOXF+OrbtgsvewA=\", false, function () {\n  return [useGlobal];\n});\n_c = SongPage;\nexport default SongPage;\nvar _c;\n$RefreshReg$(_c, \"SongPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useGlobal","Player","FontAwesomeIcon","faCirclePlay","OPTS","width","height","CORRECT_H1","CORRECT_H2","INCORRECT_H1","INCORRECT_H2","SongPage","CORRECT_SONG","isCorrect","isPlaying","setIsPlaying","imgURL","id","openInNewTab","url","window","open","console","log","Math","floor","offset","name","artist","Array","map","x","i"],"sources":["/home/ethanh/Desktop/1.1.2010s-heardle/src/components/SongPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport useGlobal from '../hooks/useGlobal'\nimport Player from './Player';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlay } from '@fortawesome/free-solid-svg-icons';\n\nconst OPTS = {width: \"0\", height:\"0\"}\nconst CORRECT_H1 = \"Well Done!\"\nconst CORRECT_H2 = \"You correctly guessed today's 2010s Heardle. Come back tomorrow to keep the current streak!\"\nconst INCORRECT_H1 = \"Better luck next time!\"\nconst INCORRECT_H2 = \"You didn't get today's 2010s Heardle, but try again tomorrow!\"\nconst SongPage = () => {\n    const {CORRECT_SONG, isCorrect} = useGlobal();\n    const [isPlaying, setIsPlaying] = useState(true);\n    \n\n    const imgURL = `https://img.youtube.com/vi/${CORRECT_SONG.id}/maxresdefault.jpg`\n\n    const openInNewTab = url => {\n        window.open(url, '_blank', 'noopener,noreferrer');\n    };\n\n    \n\n    /*TODO:\n    Also, work out how to re-use songbar logic (number of bars as a parameter [can just use = 1 in songpage, then remove % of the first index so automatically fills rest of space] and then length)\n    */\n    return (\n        <div id=\"songpage-container\">\n            <p>{console.log(isCorrect)}</p>\n            <div id=\"song-box\" onClick={() => openInNewTab(`https://youtu.be/${CORRECT_SONG.id}&t=${Math.floor(CORRECT_SONG.offset)}`)}>\n                <img src={imgURL} id=\"thumbnail-img\"/>\n                <div id=\"name-and-artist\">\n                    <p>{CORRECT_SONG.name}</p>\n                    <p id='song-artist'>{CORRECT_SONG.artist}</p>\n                </div>\n                <img src={\"https://cdn-icons-png.flaticon.com/512/1384/1384060.png\"} id=\"yt-icon\"></img>\n            </div>\n            <h1>Better luck next time! </h1>\n            <div id=\"dashes-container\">\n                {[...Array(6)].map((x, i) => <div class=\"dash\" key={i}/>)}\n            </div>\n            <h2>You didn't get today's 2010s Heardle, but try again tomorrow!</h2>\n            <Player isPlaying={isPlaying} setIsPlaying={setIsPlaying}/>            \n            <button className=\"play-btn\">\n                <FontAwesomeIcon icon = {faCirclePlay} id=\"play-icon\" onClick={() => setIsPlaying(!isPlaying)}/>\n            </button>\n            \n        </div>\n    )\n}\n\nexport default SongPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}