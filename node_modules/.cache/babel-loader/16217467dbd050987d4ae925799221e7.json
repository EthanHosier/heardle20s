{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/1.1.2010s-heardle/src/components/GuessSong.js\",\n  _s = $RefreshSig$();\nimport { faCirclePlay, faMagnifyingGlass, faSquareXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { useState, useRef } from 'react';\nimport Player from \"./Player\";\nimport raw from '../rsc/songs.txt';\nimport useGlobal from '../hooks/useGlobal';\n\n/*\nTODO:\n1. Fix search bar css so that when expands, doesn't move other elements down - use absolute position, and 'top'??\n2. Fix icons so that are dark w/ light outline\n4. Complete songPage.js (add share button? + next 2010s song in...)\n3. Add animation when playing (remove button entirely and set to just isPlaying? <div>:icon) where div = is containing 2 other divs (yt tutorial for animation)\n4. Local storage progress store\n5. Update header buttons\n6. Generate text file w/ song data\n7. ads\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUM_OF_BARS = 6;\nconst GuessSong = () => {\n  _s();\n  var _searchRef$current;\n  const {\n    CORRECT_SONG,\n    setIsCorrect,\n    setHasPlayedToday\n  } = useGlobal();\n  const [songs, setSongs] = useState([]);\n  const [guesses, setGuesses] = useState(new Array(NUM_OF_BARS));\n  const [guessNum, setGuessNum] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [songMatches, setSongMatches] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [intervalID, setIntervalID] = useState();\n  const searchRef = useRef();\n  useEffect(() => {\n    fetch(raw).then(r => r.text()).then(text => {\n      let s = JSON.parse(text);\n      setSongs(s);\n      //setSongMatches(s)\n    });\n\n    setGuesses([\"\", \"\", \"\", \"\", \"\", \"\"]);\n  }, []);\n\n  //runs every time current guess changes (TODO: Searches for matches)\n  useEffect(() => {\n    if (currentGuess == \"\") {\n      return;\n    }\n    //TODO: make this more efficient with tree / linked list type structure of popping songs on and off it instead of searching through all songs every time\n    setSongMatches(songs.filter(obj => {\n      let s = obj.song.toLowerCase();\n      let a = obj.artist.toLowerCase();\n      let g = currentGuess.toLowerCase();\n      return `${s} - ${a}`.includes(g);\n    }));\n  }, [currentGuess]);\n  useEffect(() => {\n    console.log({\n      songMatches\n    });\n  }, [songMatches]);\n  useEffect(() => {\n    console.log(guessNum);\n    if (guessNum > 5) setHasPlayedToday(true);\n  }, [guessNum]);\n  const updateGuessesArray = x => {\n    setGuesses(guesses.map((e, i) => {\n      return i == guessNum ? x : e;\n    }));\n  };\n  const onSkip = () => {\n    updateGuessesArray(\"SKIPPED\");\n    setGuessNum(guessNum + 1);\n  };\n\n  //this may not correctly work asynchronously\n  const onSubmit = () => {\n    let answer = CORRECT_SONG.name + \" - \" + CORRECT_SONG.artist;\n    if (currentGuess === answer) {\n      setIsCorrect(true);\n      setHasPlayedToday(true);\n      return;\n    }\n    updateGuessesArray(currentGuess);\n    setGuessNum(guessNum + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: guesses.map((g, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `guess-box ${guessNum == i ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            id: \"square-x-icon\",\n            icon: faSquareXmark,\n            className: guessNum <= i ? \"invisible\" : guesses[i] != \"SKIPPED\" ? \"incorrect\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), g]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      songID: CORRECT_SONG.id,\n      startOffset: CORRECT_SONG.offset,\n      guessNum: guessNum,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlay,\n        id: \"play-icon\",\n        onClick: () => setIsPlaying(!isPlaying)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"guess-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"song-matches\",\n        children: songMatches.slice(0, 10).map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `match${i}`,\n          className: \"song-match\",\n          onClick: () => setCurrentGuess(`${e.song} - ${e.artist}`),\n          children: `${e.song} - ${e.artist}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-songs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"searchbar\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            id: \"search-icon\",\n            icon: faMagnifyingGlass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchbar\",\n          ref: searchRef,\n          autoComplete: \"off\",\n          onChange: e => setCurrentGuess(e.target.value),\n          value: currentGuess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"submit-btns-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"skip\",\n        onClick: onSkip,\n        children: [\"Skip \", guessNum < 5 && `(+${guessNum + 1}s)`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        onClick: onSubmit,\n        disabled: (searchRef === null || searchRef === void 0 ? void 0 : (_searchRef$current = searchRef.current) === null || _searchRef$current === void 0 ? void 0 : _searchRef$current.value) == \"\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GuessSong, \"PbLKEfdg4fGgMwiNdqb3x1m05oI=\", false, function () {\n  return [useGlobal];\n});\n_c = GuessSong;\nexport default GuessSong;\nvar _c;\n$RefreshReg$(_c, \"GuessSong\");","map":{"version":3,"names":["faCirclePlay","faMagnifyingGlass","faSquareXmark","FontAwesomeIcon","React","useEffect","useState","useRef","Player","raw","useGlobal","NUM_OF_BARS","GuessSong","CORRECT_SONG","setIsCorrect","setHasPlayedToday","songs","setSongs","guesses","setGuesses","Array","guessNum","setGuessNum","currentGuess","setCurrentGuess","songMatches","setSongMatches","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","intervalID","setIntervalID","searchRef","fetch","then","r","text","s","JSON","parse","filter","obj","song","toLowerCase","a","artist","g","includes","console","log","updateGuessesArray","x","map","e","i","onSkip","onSubmit","answer","name","id","offset","slice","target","value","current"],"sources":["/home/ethanh/Desktop/1.1.2010s-heardle/src/components/GuessSong.js"],"sourcesContent":["import { faCirclePlay, faMagnifyingGlass, faSquareXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react'\nimport { useState, useRef } from 'react';\nimport Player from \"./Player\"\nimport raw from '../rsc/songs.txt';\nimport useGlobal from '../hooks/useGlobal';\n\n/*\nTODO:\n1. Fix search bar css so that when expands, doesn't move other elements down - use absolute position, and 'top'??\n2. Fix icons so that are dark w/ light outline\n4. Complete songPage.js (add share button? + next 2010s song in...)\n3. Add animation when playing (remove button entirely and set to just isPlaying? <div>:icon) where div = is containing 2 other divs (yt tutorial for animation)\n4. Local storage progress store\n5. Update header buttons\n6. Generate text file w/ song data\n7. ads\n*/\n\nconst NUM_OF_BARS = 6\nconst GuessSong = () => {\n\n  const {CORRECT_SONG, setIsCorrect, setHasPlayedToday} = useGlobal();\n\n  const [songs, setSongs] = useState([])\n  const [guesses, setGuesses] = useState(new Array(NUM_OF_BARS));\n  const [guessNum, setGuessNum] = useState(0)\n  const [currentGuess, setCurrentGuess] = useState(\"\")\n  const [songMatches, setSongMatches] = useState([])\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [timeElapsed, setTimeElapsed] = useState(0)\n  const [intervalID, setIntervalID] = useState()\n\n  const searchRef = useRef();\n\n  useEffect(() =>{\n    fetch(raw)\n        .then(r => r.text())\n        .then(text => {\n          let s = JSON.parse(text);\n          setSongs(s);\n          //setSongMatches(s)\n        });\n    setGuesses([\"\",\"\",\"\",\"\",\"\",\"\"])\n  }, [])\n\n  //runs every time current guess changes (TODO: Searches for matches)\n  useEffect(() =>{\n    if(currentGuess == \"\"){\n      return;\n    }\n    //TODO: make this more efficient with tree / linked list type structure of popping songs on and off it instead of searching through all songs every time\n    setSongMatches(songs.filter(obj =>{\n      let s = obj.song.toLowerCase();\n      let a = obj.artist.toLowerCase(); \n      let g = currentGuess.toLowerCase();\n      return `${s} - ${a}`.includes(g);\n  }));\n  },[currentGuess])\n\n  useEffect(() =>{\n    console.log({songMatches})\n  }, [songMatches])\n\n  \n\n  useEffect(()=>{\n    console.log(guessNum)\n    if(guessNum > 5) setHasPlayedToday(true)\n  },[guessNum])\n\n  const updateGuessesArray = (x) =>{\n    setGuesses(guesses.map((e,i) => {\n      return i == guessNum? x : e;\n    }))\n  }\n \n  const onSkip = () =>{\n    updateGuessesArray(\"SKIPPED\")\n    setGuessNum(guessNum + 1)\n  }\n\n  //this may not correctly work asynchronously\n  const onSubmit = () =>{\n    let answer = CORRECT_SONG.name + \" - \" + CORRECT_SONG.artist;\n    if(currentGuess === answer){\n      setIsCorrect(true)\n      setHasPlayedToday(true)\n      return;\n    }\n    updateGuessesArray(currentGuess);\n    setGuessNum(guessNum + 1)\n  }\n\n\n  return (\n    <>\n      <div className='bars'>\n        {guesses.map((g,i) =>{\n          return  <div className={`guess-box ${(guessNum == i) ? \"active\":\"\"}`} key={i}>\n            <FontAwesomeIcon id= \"square-x-icon\" icon = {faSquareXmark} className = {guessNum <= i ? \"invisible\" : (guesses[i] != \"SKIPPED\"? \"incorrect\":\"\")} /> \n            {/*className={currentGuess > i ? \"\":\"invisible\"}*/ }\n            {g}\n            </div>\n        })}\n      </div>\n      \n      <Player songID={CORRECT_SONG.id} startOffset={CORRECT_SONG.offset} guessNum={guessNum} isPlaying ={isPlaying} setIsPlaying={setIsPlaying}/>\n\n      <button className=\"play-btn\">\n        <FontAwesomeIcon icon = {faCirclePlay} id=\"play-icon\" onClick={() => setIsPlaying(!isPlaying)}/>\n      </button>\n      \n\n      <div id=\"guess-container\">\n        <div id=\"song-matches\">\n          {songMatches.slice(0,10).map((e,i) =>\n          <div \n          id = {`match${i}`} \n          key={i} \n          className='song-match'\n          onClick = {() => setCurrentGuess(`${e.song} - ${e.artist}`)}\n          >\n          {`${e.song} - ${e.artist}`}\n          </div>\n          )}\n        </div>\n        <div id=\"search-songs\">\n          <label htmlFor=\"searchbar\">\n            <FontAwesomeIcon id=\"search-icon\" icon={faMagnifyingGlass} />\n          </label>\n          <input\n          type=\"text\"\n          id=\"searchbar\"\n          ref={searchRef}\n          autoComplete=\"off\"\n          onChange={(e) => setCurrentGuess(e.target.value)}\n          value={currentGuess}\n          />\n        </div>\n      </div>\n      <div id=\"submit-btns-container\">\n        <button id=\"skip\" onClick={onSkip}>Skip {guessNum <5 && `(+${guessNum+1}s)`}</button>\n        <button id=\"submit\" onClick = {onSubmit} disabled={searchRef?.current?.value ==\"\"}>Submit</button>\n      </div>\n\n    </>\n  )\n}\n\nexport default GuessSong"],"mappings":"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"},"metadata":{},"sourceType":"module"}