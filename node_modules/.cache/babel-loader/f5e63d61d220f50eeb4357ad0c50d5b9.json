{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useGlobal from '../hooks/useGlobal';\nimport ProgressBar from './ProgressBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleStop, faCirclePlay } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Player = _ref => {\n  _s();\n  let {\n    guessNum\n  } = _ref;\n  const [timeoutID, setTimeoutID] = useState();\n  const [timeStarted, setTimeStarted] = useState(new Date());\n  const [duration, setDuration] = useState(16);\n  const {\n    CORRECT_SONG,\n    isPlaying,\n    setIsPlaying,\n    playerRef\n  } = useGlobal();\n\n  //handles song having been played for allocated time\n  //==============================\n  const onTimeout = () => {\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n  };\n  //==============================\n\n  //===============================\n  const getGuessTime = gn => {\n    //returns guess-time for corresponding guess num in ms\n    return (1 + gn * (gn + 1) / 2) * 1000;\n  };\n  //================================\n\n  useEffect(() => {\n    console.log(\"mount\");\n    playerRef.current.internalPlayer.setVolume(100);\n    return () => {\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n    };\n  }, []);\n  //================================\n\n  //handles play/pausing of player\n  useEffect(() => {\n    if (!playerRef.current) return;\n    if (isPlaying) {\n      //play\n      playerRef.current.internalPlayer.playVideo();\n      let playFor = guessNum !== undefined ? getGuessTime(guessNum) : duration * 1000;\n      setTimeoutID(setTimeout(onTimeout, playFor)); //guess time secs -> ms\n      console.log(\"set timeout\");\n      setTimeStarted(new Date());\n    } else {\n      //pause\n      playerRef.current.internalPlayer.pauseVideo();\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n      clearTimeout(timeoutID);\n      console.log(\"cleared\");\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    if (guessNum !== undefined) return;\n    const getDuration = (async () => {\n      const durationPromise = playerRef.current.internalPlayer.getDuration();\n      durationPromise.then(d => {\n        setDuration(Math.floor(d - CORRECT_SONG.offset));\n      });\n    })();\n\n    //playerRef.current.internalPlayer.getDuration().then(d => console.log(d));\n  }, [playerRef]);\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(() => {\n    if (guessNum == 0 || guessNum == undefined) return; //when guessNum is first set\n    clearTimeout(timeoutID);\n    let timeRemaining = getGuessTime(guessNum) - (new Date() - timeStarted);\n    setTimeoutID(setTimeout(onTimeout, timeRemaining));\n    console.log(\"set timeout\");\n  }, [guessNum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      isPlaying: isPlaying,\n      guessNum: guessNum,\n      duration: duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-btn\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isPlaying ? faCircleStop : faCirclePlay,\n        id: \"play-icon\",\n        onClick: () => setIsPlaying(!isPlaying)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Player, \"Yx3v56fNqWopIHJY+1LBvCV/Vec=\", false, function () {\n  return [useGlobal];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useGlobal","ProgressBar","FontAwesomeIcon","faCircleStop","faCirclePlay","Player","guessNum","timeoutID","setTimeoutID","timeStarted","setTimeStarted","Date","duration","setDuration","CORRECT_SONG","isPlaying","setIsPlaying","playerRef","onTimeout","current","internalPlayer","pauseVideo","seekTo","offset","getGuessTime","gn","console","log","setVolume","playVideo","playFor","undefined","setTimeout","clearTimeout","getDuration","durationPromise","then","d","Math","floor","timeRemaining"],"sources":["/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/components/Player.js"],"sourcesContent":["import React, { useState,useEffect, useRef } from 'react'\nimport useGlobal from '../hooks/useGlobal';\nimport ProgressBar from './ProgressBar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleStop, faCirclePlay } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({guessNum}) => {\n  const [timeoutID, setTimeoutID] = useState()\n  const [timeStarted, setTimeStarted] = useState(new Date())\n  const [duration, setDuration] = useState(16)\n\n  const {CORRECT_SONG, isPlaying,setIsPlaying,playerRef} = useGlobal();\n\n  //handles song having been played for allocated time\n  //==============================\n  const onTimeout = () => {\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n    playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n  }\n  //==============================\n\n  //===============================\n  const getGuessTime = (gn) =>{ //returns guess-time for corresponding guess num in ms\n    return (1 + gn*(gn+1)/2)*1000 \n  }\n  //================================\n  \n  useEffect(()=>{\n    console.log(\"mount\")\n    playerRef.current.internalPlayer.setVolume(100);\n\n    return () => {\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset)\n    }\n  },[])\n  //================================\n\n  //handles play/pausing of player\n  useEffect(()=>{\n    if(!playerRef.current) return\n    if(isPlaying){ //play\n      playerRef.current.internalPlayer.playVideo();\n      let playFor = guessNum !== undefined? getGuessTime(guessNum):duration*1000\n      setTimeoutID(setTimeout(onTimeout,playFor)) //guess time secs -> ms\n      console.log(\"set timeout\")\n      setTimeStarted(new Date())\n    \n    } else{ //pause\n      playerRef.current.internalPlayer.pauseVideo();\n      playerRef.current.internalPlayer.seekTo(CORRECT_SONG.offset);\n      clearTimeout(timeoutID)\n      console.log(\"cleared\")\n    }\n\n   \n  },[isPlaying])\n\n  useEffect(()=>{\n    if(guessNum !== undefined) return;\n    const getDuration = (async() =>{\n        const durationPromise = playerRef.current.internalPlayer.getDuration()\n        durationPromise.then((d)=>{\n          setDuration(Math.floor(d - CORRECT_SONG.offset))\n        }\n    )})();\n            \n    \n    //playerRef.current.internalPlayer.getDuration().then(d => console.log(d));\n\n  },[playerRef])\n\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(()=>{\n    if(guessNum == 0 || guessNum == undefined) return //when guessNum is first set\n    clearTimeout(timeoutID);\n    let timeRemaining = getGuessTime(guessNum) - ((new Date()) - timeStarted);\n    setTimeoutID(setTimeout(onTimeout,timeRemaining))\n    console.log(\"set timeout\")\n  }, [guessNum])\n\n  return (\n    <>\n      <ProgressBar isPlaying={isPlaying} guessNum={guessNum} duration={duration}/>\n      <button className=\"play-btn\">\n        <FontAwesomeIcon icon = {isPlaying? faCircleStop : faCirclePlay} id=\"play-icon\" onClick={() => setIsPlaying(!isPlaying)}/>\n      </button>\n    </>\n    )\n}\n\nexport default Player"],"mappings":"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"},"metadata":{},"sourceType":"module"}