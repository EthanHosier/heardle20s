{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect, useState } from \"react\";\nimport YouTube from 'react-youtube';\nimport raw from './rsc/days-songs.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EMPTY_SCORES_OBJ = {\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  \"X\": 0\n};\nconst STARTING_POINT_MS = 1667606400000;\nconst OPTS = {\n  width: \"0\",\n  height: \"0\"\n};\nfunction App() {\n  _s();\n  const {\n    setHasPlayedToday,\n    setIsCorrect,\n    playerRef,\n    correctSong,\n    setCorrectSong,\n    setIsPlaying,\n    setDuration\n  } = useGlobal();\n  const [t, setT] = useState(false);\n  const [ytReady, setYtReady] = useState(false);\n  useEffect(() => {\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"));\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"));\n    const wonLast = JSON.parse(localStorage.getItem(\"won-last\"));\n    if (isToday(lastPlayed)) {\n      setHasPlayedToday(true);\n      resetStoredGuesses();\n      setIsCorrect(wonLast);\n      return;\n    }\n    if (!isToday(lastStarted)) {\n      resetStoredGuesses();\n    }\n    localStorage.setItem(\"last-started\", new Date());\n\n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ));\n\n    //reset guesses\n\n    console.log(\"yeahh\");\n    fetch(raw).then(r => r.text()).then(text => {\n      let s = JSON.parse(text);\n      setCorrectSong(s[1]);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(correctSong);\n  }, [correctSong]);\n  const isToday = someDate => {\n    const today = new Date();\n    return (someDate === null || someDate === void 0 ? void 0 : someDate.getDate()) == today.getDate() && (someDate === null || someDate === void 0 ? void 0 : someDate.getMonth()) == today.getMonth() && (someDate === null || someDate === void 0 ? void 0 : someDate.getFullYear()) == today.getFullYear();\n  };\n  const resetStoredGuesses = () => {\n    localStorage.setItem(\"guesses\", JSON.stringify(['', '', '', '', '', '']));\n  };\n  const onReady = () => {\n    const ip = playerRef.current.internalPlayer;\n    ip.playVideo();\n  };\n  const onStateChange = e => {\n    if (e.data == 2) {\n      setIsPlaying(false);\n      console.log(\"2\");\n      return;\n    }\n    if (e.data == 1) {\n      setIsPlaying(true);\n      console.log(\"1\");\n      return;\n    }\n    if (e.data != -1 || ytReady) return;\n    if (!t) {\n      setT(true);\n      return;\n    }\n    const ip = playerRef.current.internalPlayer;\n    setYtReady(true);\n  };\n  useEffect(() => {\n    const getDuration = (async () => {\n      const durationPromise = playerRef.current.internalPlayer.getDuration();\n      durationPromise.then(d => {\n        setDuration(Math.floor(d - correctSong.offset));\n      });\n    })();\n  }, [playerRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: correctSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(YouTube, {\n        opts: OPTS,\n        onReady: onReady,\n        videoId: correctSong.id,\n        ref: playerRef,\n        onStateChange: onStateChange,\n        id: \"yt player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), !ytReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n}\n_s(App, \"t/up6mq5hxEND7DuqyGwwkmnYs4=\", false, function () {\n  return [useGlobal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","useGlobal","useEffect","useState","YouTube","raw","EMPTY_SCORES_OBJ","STARTING_POINT_MS","OPTS","width","height","App","setHasPlayedToday","setIsCorrect","playerRef","correctSong","setCorrectSong","setIsPlaying","setDuration","t","setT","ytReady","setYtReady","lastStarted","Date","localStorage","getItem","lastPlayed","wonLast","JSON","parse","isToday","resetStoredGuesses","setItem","stringify","console","log","fetch","then","r","text","s","someDate","today","getDate","getMonth","getFullYear","onReady","ip","current","internalPlayer","playVideo","onStateChange","e","data","getDuration","durationPromise","d","Math","floor","offset","id"],"sources":["/home/ethanh/Desktop/WORKING_TIMER_2010s_Heardle/src/App.js"],"sourcesContent":["import Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect,useState } from \"react\";\nimport YouTube from 'react-youtube';\nimport raw from './rsc/days-songs.txt';\n\n\nconst EMPTY_SCORES_OBJ = \n    {\n        1:0,\n        2:0,\n        3:0,\n        4:0,\n        5:0,\n        6:0,\n        \"X\":0\n    }\n\nconst STARTING_POINT_MS = 1667606400000\nconst OPTS = {width: \"0\", height:\"0\"}\n\nfunction App() {\n\n  const {setHasPlayedToday,setIsCorrect,playerRef, correctSong, setCorrectSong, setIsPlaying, setDuration} = useGlobal();\n  const [t,setT] = useState(false)\n  const [ytReady, setYtReady] = useState(false);\n\n  useEffect(() =>{\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"))\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"))\n    const wonLast = JSON.parse(localStorage.getItem(\"won-last\"));\n\n    if(isToday(lastPlayed)){\n        setHasPlayedToday(true);\n        resetStoredGuesses();\n        setIsCorrect(wonLast)\n        return\n    }\n\n    if(!isToday(lastStarted)){\n        resetStoredGuesses();\n    }\n\n    localStorage.setItem(\"last-started\", new Date())\n    \n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ))\n\n    //reset guesses\n  \n    console.log(\"yeahh\")\n    fetch(raw)\n      .then(r => r.text())\n      .then(text => {\n        let s = JSON.parse(text);\n        setCorrectSong(s[1])\n     });\n  \n},[])\n\n  useEffect(() => {\n    console.log(correctSong)\n  },[correctSong])\n\n\n  const isToday = (someDate) => {\n    const today = new Date()\n    return someDate?.getDate() == today.getDate() &&\n      someDate?.getMonth() == today.getMonth() &&\n      someDate?.getFullYear() == today.getFullYear()\n  }\n  const resetStoredGuesses = () =>{\n    localStorage.setItem(\"guesses\", JSON.stringify(['','','','','','']))\n}\n\n  const onReady = () =>{\n    const ip = playerRef.current.internalPlayer;\n    ip.playVideo();\n\n  }\n\n  const onStateChange =(e) =>{\n    if(e.data ==2){\n      setIsPlaying(false)\n      console.log(\"2\")\n      return\n    }\n    \n    \n    if(e.data == 1) {\n      setIsPlaying(true)\n      console.log(\"1\")\n      return\n    }\n    \n    if(e.data != -1 || ytReady) return\n    if(!t){\n      setT(true)\n      return\n   }\n\n   const ip = playerRef.current.internalPlayer;\n   setYtReady(true)\n\n  }\n\n  useEffect(()=>{\n    const getDuration = (async() =>{\n        const durationPromise = playerRef.current.internalPlayer.getDuration()\n        durationPromise.then((d)=>{\n          setDuration(Math.floor(d - correctSong.offset))\n        }\n    )})();\n\n  },[playerRef])\n\n  return ( \n    <>\n\n    {correctSong? \n    <div id=\"App\">\n\n      <YouTube opts={OPTS} onReady={onReady} videoId={correctSong.id} ref={playerRef} onStateChange={onStateChange} id=\"yt player\" />\n      {!ytReady\n      ?<div id=\"loader-container\"><div className=\"loader\"></div></div>\n      : <Layout />\n      }\n      \n    </div>\n    \n    : <></>\n}\n\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}