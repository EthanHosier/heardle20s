{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/2010s-heardle/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPTS = {\n  width: \"0\",\n  height: \"0\"\n};\nconst Player = _ref => {\n  _s();\n  let {\n    guessNum,\n    songID,\n    startOffset,\n    isPlaying,\n    setIsPlaying\n  } = _ref;\n  const playerRef = useRef();\n  const [timeoutID, setTimeoutID] = useState();\n  const [timeStarted, setTimeStarted] = useState();\n\n  //handles song having been played for allocated time\n  const onTimeout = () => {\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n  };\n  useEffect(() => {\n    //forces song to load\n    playerRef.current.internalPlayer.playVideo();\n    playerRef.current.internalPlayer.pauseVideo();\n    playerRef.current.internalPlayer.setVolume(100);\n  }, []);\n\n  //handles play/pausing of player\n  useEffect(() => {\n    if (!playerRef.current) return;\n    if (isPlaying) {\n      playerRef.current.internalPlayer.seekTo(startOffset);\n      playerRef.current.internalPlayer.playVideo();\n      let guessTime = (1 + guessNum * (guessNum + 1) / 2) * 1000;\n      console.log(guessTime);\n      setTimeoutID(setTimeout(onTimeout, guessTime));\n      setTimeStarted(new Date());\n    } else {\n      playerRef.current.internalPlayer.pauseVideo();\n      clearTimeout(timeoutID);\n      console.log(`time left: ${timeoutID}`);\n    }\n  }, [isPlaying]);\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(() => {\n    if (guessNum == 0) return; //when guessNum is first set\n\n    clearTimeout(timeoutID);\n    let timeRemaining = (1 + guessNum * (guessNum + 1) / 2) * 1000 - (new Date() - timeStarted);\n    console.log(timeRemaining);\n    setTimeoutID(setTimeout(onTimeout, timeRemaining));\n  }, [guessNum]);\n  return /*#__PURE__*/_jsxDEV(YouTube, {\n    className: \"invisible\",\n    opts: OPTS,\n    videoId: songID,\n    onReady: () => console.log(\"READY\"),\n    ref: playerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"LQfBWtKyX8fPkqPTNODpjNjZEAs=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useRef","YouTube","OPTS","width","height","Player","guessNum","songID","startOffset","isPlaying","setIsPlaying","playerRef","timeoutID","setTimeoutID","timeStarted","setTimeStarted","onTimeout","current","internalPlayer","pauseVideo","playVideo","setVolume","seekTo","guessTime","console","log","setTimeout","Date","clearTimeout","timeRemaining"],"sources":["/home/ethanh/Desktop/2010s-heardle/src/components/Player.js"],"sourcesContent":["import React, { useState,useEffect, useRef } from 'react'\nimport YouTube from 'react-youtube';\n\nconst OPTS = {width: \"0\", height:\"0\"}\n\nconst Player = ({guessNum, songID,startOffset, isPlaying, setIsPlaying}) => {\n  const playerRef = useRef()\n  const [timeoutID, setTimeoutID] = useState()\n  const [timeStarted, setTimeStarted] = useState()\n\n  //handles song having been played for allocated time\n  const onTimeout = () =>{\n    setIsPlaying(false);\n    playerRef.current.internalPlayer.pauseVideo();\n  }\n\n  \n  useEffect(()=>{\n    //forces song to load\n    playerRef.current.internalPlayer.playVideo();\n    playerRef.current.internalPlayer.pauseVideo();\n\n    playerRef.current.internalPlayer.setVolume(100);\n  },[])\n\n  //handles play/pausing of player\n  useEffect(()=>{\n    if(!playerRef.current) return\n    if(isPlaying){\n      playerRef.current.internalPlayer.seekTo(startOffset);\n      playerRef.current.internalPlayer.playVideo();\n      let guessTime = (1 + guessNum*(guessNum+1)/2) * 1000\n      console.log(guessTime)\n      setTimeoutID(setTimeout(onTimeout,guessTime))\n      setTimeStarted(new Date())\n    } else{\n      playerRef.current.internalPlayer.pauseVideo();\n      clearTimeout(timeoutID)\n      console.log(`time left: ${timeoutID}`)\n    }\n  },[isPlaying])\n\n  //handles when the user skips while the song is playing (so keeps playing until new time slot)\n  useEffect(()=>{\n    if(guessNum == 0) return //when guessNum is first set\n  \n    clearTimeout(timeoutID);\n    let timeRemaining = (1 + guessNum*(guessNum+1)/2) * 1000 - (new Date() - timeStarted);\n    console.log(timeRemaining);\n    setTimeoutID(setTimeout(onTimeout,timeRemaining))\n  }, [guessNum])\n\n  return (\n    <YouTube className='invisible' opts={OPTS} videoId={songID} onReady={()=>console.log(\"READY\")} ref={playerRef}/>\n  )\n}\n\nexport default Player"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzD,OAAOC,OAAO,MAAM,eAAe;AAAC;AAEpC,MAAMC,IAAI,GAAG;EAACC,KAAK,EAAE,GAAG;EAAEC,MAAM,EAAC;AAAG,CAAC;AAErC,MAAMC,MAAM,GAAG,QAA6D;EAAA;EAAA,IAA5D;IAACC,QAAQ;IAAEC,MAAM;IAACC,WAAW;IAAEC,SAAS;IAAEC;EAAY,CAAC;EACrE,MAAMC,SAAS,GAAGX,MAAM,EAAE;EAC1B,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,EAAE;EAC5C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,EAAE;;EAEhD;EACA,MAAMkB,SAAS,GAAG,MAAK;IACrBN,YAAY,CAAC,KAAK,CAAC;IACnBC,SAAS,CAACM,OAAO,CAACC,cAAc,CAACC,UAAU,EAAE;EAC/C,CAAC;EAGDpB,SAAS,CAAC,MAAI;IACZ;IACAY,SAAS,CAACM,OAAO,CAACC,cAAc,CAACE,SAAS,EAAE;IAC5CT,SAAS,CAACM,OAAO,CAACC,cAAc,CAACC,UAAU,EAAE;IAE7CR,SAAS,CAACM,OAAO,CAACC,cAAc,CAACG,SAAS,CAAC,GAAG,CAAC;EACjD,CAAC,EAAC,EAAE,CAAC;;EAEL;EACAtB,SAAS,CAAC,MAAI;IACZ,IAAG,CAACY,SAAS,CAACM,OAAO,EAAE;IACvB,IAAGR,SAAS,EAAC;MACXE,SAAS,CAACM,OAAO,CAACC,cAAc,CAACI,MAAM,CAACd,WAAW,CAAC;MACpDG,SAAS,CAACM,OAAO,CAACC,cAAc,CAACE,SAAS,EAAE;MAC5C,IAAIG,SAAS,GAAG,CAAC,CAAC,GAAGjB,QAAQ,IAAEA,QAAQ,GAAC,CAAC,CAAC,GAAC,CAAC,IAAI,IAAI;MACpDkB,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;MACtBV,YAAY,CAACa,UAAU,CAACV,SAAS,EAACO,SAAS,CAAC,CAAC;MAC7CR,cAAc,CAAC,IAAIY,IAAI,EAAE,CAAC;IAC5B,CAAC,MAAK;MACJhB,SAAS,CAACM,OAAO,CAACC,cAAc,CAACC,UAAU,EAAE;MAC7CS,YAAY,CAAChB,SAAS,CAAC;MACvBY,OAAO,CAACC,GAAG,CAAE,cAAab,SAAU,EAAC,CAAC;IACxC;EACF,CAAC,EAAC,CAACH,SAAS,CAAC,CAAC;;EAEd;EACAV,SAAS,CAAC,MAAI;IACZ,IAAGO,QAAQ,IAAI,CAAC,EAAE,OAAM,CAAC;;IAEzBsB,YAAY,CAAChB,SAAS,CAAC;IACvB,IAAIiB,aAAa,GAAG,CAAC,CAAC,GAAGvB,QAAQ,IAAEA,QAAQ,GAAC,CAAC,CAAC,GAAC,CAAC,IAAI,IAAI,IAAI,IAAIqB,IAAI,EAAE,GAAGb,WAAW,CAAC;IACrFU,OAAO,CAACC,GAAG,CAACI,aAAa,CAAC;IAC1BhB,YAAY,CAACa,UAAU,CAACV,SAAS,EAACa,aAAa,CAAC,CAAC;EACnD,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,OAAO;IAAC,SAAS,EAAC,WAAW;IAAC,IAAI,EAAEJ,IAAK;IAAC,OAAO,EAAEK,MAAO;IAAC,OAAO,EAAE,MAAIiB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAE;IAAC,GAAG,EAAEd;EAAU;IAAA;IAAA;IAAA;EAAA,QAAE;AAEpH,CAAC;AAAA,GAlDKN,MAAM;AAAA,KAANA,MAAM;AAoDZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}