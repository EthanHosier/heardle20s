{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/1.1.2010s-heardle/src/components/ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = _ref => {\n  _s();\n  let {\n    isPlaying,\n    guessNum\n  } = _ref;\n  //used to update elapsed time\n  const [intervalID, setIntervalID] = useState();\n  const [timeElapsed, setTimeElapsed] = useState();\n  useEffect(() => {\n    if (!isPlaying) {\n      setTimeElapsed(0);\n      if (intervalID) clearInterval(intervalID);\n      return;\n    }\n    let ms10 = 0;\n    setIntervalID(setInterval(() => setTimeElapsed(++ms10), 100));\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contents\",\n        children: [...Array(6)].map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `p${i}`,\n          className: `partial-bar ${guessNum >= i ? \"full\" : \"\"}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-green\",\n      style: {\n        width: `${timeElapsed / 1.6}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timers\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"0:\", timeElapsed >= 100 ? Math.floor(timeElapsed / 10) : `0${Math.floor(timeElapsed / 10)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"0:16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"Sl1lyhe5V0aG0VKEWmsVSeakvKY=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","useEffect","ProgressBar","isPlaying","guessNum","intervalID","setIntervalID","timeElapsed","setTimeElapsed","clearInterval","ms10","setInterval","Array","map","x","i","width","Math","floor"],"sources":["/home/ethanh/Desktop/1.1.2010s-heardle/src/components/ProgressBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst ProgressBar = ({isPlaying, guessNum}) => {\n    //used to update elapsed time\n    const [intervalID,setIntervalID] = useState();\n    const [timeElapsed,setTimeElapsed] = useState();\n\n    useEffect(() =>{\n    if(!isPlaying){\n      setTimeElapsed(0);\n      if(intervalID) clearInterval(intervalID);\n      return\n    }\n\n    let ms10 = 0;\n    setIntervalID(setInterval(()=>setTimeElapsed(++ms10),100))\n  },[isPlaying])\n  \n    return (\n    <div id = \"progress\">\n        <div id=\"progress-bar\">\n          <div id=\"contents\">\n            {[...Array(6)].map((x, i) =>\n              <div id={`p${i}`} key={i} className= {`partial-bar ${guessNum >= i? \"full\": \"\"}`} />\n            )}\n          </div>\n        </div>\n        <div id=\"progress-green\" style={{width:`${(timeElapsed /1.6)}%`}}/>\n        <div id=\"timers\">\n          <p>0:{timeElapsed >=100? Math.floor(timeElapsed/10):`0${Math.floor(timeElapsed/10)}`}</p>\n          <p>0:16</p>\n        </div>\n      </div>\n  )\n}\n\nexport default ProgressBar"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAElD,MAAMC,WAAW,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAACC,SAAS;IAAEC;EAAQ,CAAC;EACtC;EACA,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGN,QAAQ,EAAE;EAC7C,MAAM,CAACO,WAAW,EAACC,cAAc,CAAC,GAAGR,QAAQ,EAAE;EAE/CC,SAAS,CAAC,MAAK;IACf,IAAG,CAACE,SAAS,EAAC;MACZK,cAAc,CAAC,CAAC,CAAC;MACjB,IAAGH,UAAU,EAAEI,aAAa,CAACJ,UAAU,CAAC;MACxC;IACF;IAEA,IAAIK,IAAI,GAAG,CAAC;IACZJ,aAAa,CAACK,WAAW,CAAC,MAAIH,cAAc,CAAC,EAAEE,IAAI,CAAC,EAAC,GAAG,CAAC,CAAC;EAC5D,CAAC,EAAC,CAACP,SAAS,CAAC,CAAC;EAEZ,oBACA;IAAK,EAAE,EAAG,UAAU;IAAA,wBAChB;MAAK,EAAE,EAAC,cAAc;MAAA,uBACpB;QAAK,EAAE,EAAC,UAAU;QAAA,UACf,CAAC,GAAGS,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACtB;UAAK,EAAE,EAAG,IAAGA,CAAE,EAAE;UAAS,SAAS,EAAI,eAAcX,QAAQ,IAAIW,CAAC,GAAE,MAAM,GAAE,EAAG;QAAE,GAA1DA,CAAC;UAAA;UAAA;UAAA;QAAA,QAA4D;MACrF;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,EAAE,EAAC,gBAAgB;MAAC,KAAK,EAAE;QAACC,KAAK,EAAE,GAAGT,WAAW,GAAE,GAAK;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACnE;MAAK,EAAE,EAAC,QAAQ;MAAA,wBACd;QAAA,iBAAMA,WAAW,IAAG,GAAG,GAAEU,IAAI,CAACC,KAAK,CAACX,WAAW,GAAC,EAAE,CAAC,GAAE,IAAGU,IAAI,CAACC,KAAK,CAACX,WAAW,GAAC,EAAE,CAAE,EAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACzF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAA,GAhCKL,WAAW;AAAA,KAAXA,WAAW;AAkCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}