{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/suitableForMobile.2010s-heardle/src/App.js\",\n  _s = $RefreshSig$();\nimport Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_SCORES_OBJ = {\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  \"X\": 0\n};\nfunction App() {\n  _s();\n  const {\n    setHasPlayedToday,\n    setIsCorrect\n  } = useGlobal();\n  useEffect(() => {\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"));\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"));\n    if (isToday(lastPlayed)) {\n      setHasPlayedToday(true);\n      resetStoredGuesses();\n      return;\n    }\n    if (!isToday(lastStarted)) {\n      resetStoredGuesses();\n    }\n    localStorage.setItem(\"last-started\", new Date());\n\n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ));\n  }, []);\n  const isToday = someDate => {\n    const today = new Date();\n    return (someDate === null || someDate === void 0 ? void 0 : someDate.getDate()) == today.getDate() && (someDate === null || someDate === void 0 ? void 0 : someDate.getMonth()) == today.getMonth() && (someDate === null || someDate === void 0 ? void 0 : someDate.getFullYear()) == today.getFullYear();\n  };\n  const resetStoredGuesses = () => {\n    localStorage.setItem(\"guesses\", JSON.stringify(['', '', '', '', '', '']));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XihpuvwHGcu5j9gcRI4uXPXwRMk=\", false, function () {\n  return [useGlobal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Layout","useGlobal","useEffect","EMPTY_SCORES_OBJ","App","setHasPlayedToday","setIsCorrect","lastStarted","Date","localStorage","getItem","lastPlayed","isToday","resetStoredGuesses","setItem","JSON","stringify","someDate","today","getDate","getMonth","getFullYear"],"sources":["/home/ethanh/Desktop/suitableForMobile.2010s-heardle/src/App.js"],"sourcesContent":["import Layout from \"./components/Layout\";\nimport useGlobal from \"./hooks/useGlobal\";\nimport { useEffect } from \"react\";\n\nconst EMPTY_SCORES_OBJ = \n    {\n        1:0,\n        2:0,\n        3:0,\n        4:0,\n        5:0,\n        6:0,\n        \"X\":0\n    }\n\nfunction App() {\n\n  const {setHasPlayedToday,setIsCorrect} = useGlobal();\n\n  useEffect(() =>{\n    const lastStarted = new Date(localStorage.getItem(\"last-started\"))\n    const lastPlayed = new Date(localStorage.getItem(\"last-played\"))\n\n    if(isToday(lastPlayed)){\n        setHasPlayedToday(true);\n        resetStoredGuesses();\n        \n        return\n    }\n\n    if(!isToday(lastStarted)){\n        resetStoredGuesses();\n    }\n\n    localStorage.setItem(\"last-started\", new Date())\n    \n    //check if scores in storage - if not, add them\n    localStorage.getItem(\"scores\") == null && localStorage.setItem(\"scores\", JSON.stringify(EMPTY_SCORES_OBJ))\n\n},[])\n\n  const isToday = (someDate) => {\n    const today = new Date()\n    return someDate?.getDate() == today.getDate() &&\n      someDate?.getMonth() == today.getMonth() &&\n      someDate?.getFullYear() == today.getFullYear()\n  }\n  const resetStoredGuesses = () =>{\n    localStorage.setItem(\"guesses\", JSON.stringify(['','','','','','']))\n}\n\n  return ( \n    <div id=\"App\">\n      <Layout />\n    </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,gBAAgB,GAClB;EACI,CAAC,EAAC,CAAC;EACH,CAAC,EAAC,CAAC;EACH,CAAC,EAAC,CAAC;EACH,CAAC,EAAC,CAAC;EACH,CAAC,EAAC,CAAC;EACH,CAAC,EAAC,CAAC;EACH,GAAG,EAAC;AACR,CAAC;AAEL,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM;IAACC,iBAAiB;IAACC;EAAY,CAAC,GAAGL,SAAS,EAAE;EAEpDC,SAAS,CAAC,MAAK;IACb,MAAMK,WAAW,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IAClE,MAAMC,UAAU,GAAG,IAAIH,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IAEhE,IAAGE,OAAO,CAACD,UAAU,CAAC,EAAC;MACnBN,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,kBAAkB,EAAE;MAEpB;IACJ;IAEA,IAAG,CAACD,OAAO,CAACL,WAAW,CAAC,EAAC;MACrBM,kBAAkB,EAAE;IACxB;IAEAJ,YAAY,CAACK,OAAO,CAAC,cAAc,EAAE,IAAIN,IAAI,EAAE,CAAC;;IAEhD;IACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAID,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACb,gBAAgB,CAAC,CAAC;EAE9G,CAAC,EAAC,EAAE,CAAC;EAEH,MAAMS,OAAO,GAAIK,QAAQ,IAAK;IAC5B,MAAMC,KAAK,GAAG,IAAIV,IAAI,EAAE;IACxB,OAAO,CAAAS,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,OAAO,EAAE,KAAID,KAAK,CAACC,OAAO,EAAE,IAC3C,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,QAAQ,EAAE,KAAIF,KAAK,CAACE,QAAQ,EAAE,IACxC,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,WAAW,EAAE,KAAIH,KAAK,CAACG,WAAW,EAAE;EAClD,CAAC;EACD,MAAMR,kBAAkB,GAAG,MAAK;IAC9BJ,YAAY,CAACK,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC;EACxE,CAAC;EAEC,oBACE;IAAK,EAAE,EAAC,KAAK;IAAA,uBACX,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAzCQZ,GAAG;EAAA,QAE+BH,SAAS;AAAA;AAAA,KAF3CG,GAAG;AA2CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}