{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/suitableForMobile.2010s-heardle/src/components/StatsPop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faX } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsPop = _ref => {\n  _s();\n  let {\n    close\n  } = _ref;\n  const [xVals, setXVals] = useState([]);\n  const [yVals, setYVals] = useState([]);\n  useEffect(() => {\n    const stats = JSON.parse(localStorage.getItem(\"scores\"));\n    setXVals(Object.keys(stats));\n    setYVals(Object.values(stats));\n  }, []);\n  const getMaxValue = arr => {\n    let max = 0;\n    arr.forEach(e => {\n      max = Math.max(max, e);\n    });\n    return max;\n  };\n  const getTotalPlays = arr => {\n    let total = 0;\n    arr.forEach(e => {\n      total += e;\n    });\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      id: \"close\",\n      icon: faX,\n      onClick: close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"barchart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"barchart-bars-container\",\n        children: yVals.map((y, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"barchart-bar\",\n          style: {\n            height: `${100 * y / getMaxValue(yVals)}%`,\n            backgroundColor: `${i == 6 && \"red\"}`\n          },\n          children: y ? y : \"\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"barchart-labels-container\",\n        children: xVals.map((x, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"barchart-label\",\n          style: {\n            color: `${i == 6 && \"red\"}`\n          },\n          children: x == \"X\" ? \"X\" : `${x}°`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"specific-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nums-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: getTotalPlays(yVals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getTotalPlays(yVals.slice(0, yVals.length - 1))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [getTotalPlays(yVals) && Math.round(100 * getTotalPlays(yVals.slice(0, yVals.length - 1)) / getTotalPlays(yVals)), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nums-stats-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Won\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Win Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPop, \"+OLxc6huUeT9xNPK5QbNEGcNVzE=\");\n_c = StatsPop;\nexport default StatsPop;\nvar _c;\n$RefreshReg$(_c, \"StatsPop\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faX","StatsPop","close","xVals","setXVals","yVals","setYVals","stats","JSON","parse","localStorage","getItem","Object","keys","values","getMaxValue","arr","max","forEach","e","Math","getTotalPlays","total","map","y","i","height","backgroundColor","x","color","slice","length","round"],"sources":["/home/ethanh/Desktop/suitableForMobile.2010s-heardle/src/components/StatsPop.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' \nimport { faX } from '@fortawesome/free-solid-svg-icons'\n\n\nconst StatsPop = ({close}) => {\n  const [xVals, setXVals] = useState([])\n  const [yVals,setYVals] = useState([])\n\n  useEffect(()=>{\n    const stats = JSON.parse(localStorage.getItem(\"scores\"));\n    setXVals(Object.keys(stats));\n    setYVals(Object.values(stats));\n  },[])\n  \n  const getMaxValue = (arr) => {\n    let max = 0;\n    arr.forEach((e)=>{\n      max=Math.max(max,e)\n    })\n    return max;\n  }\n\n  const getTotalPlays = (arr) =>{\n    let total = 0\n    arr.forEach((e) => {\n      total += e;\n    })\n    return total;\n  }\n\n  return (\n    <div className='popup'>\n        <FontAwesomeIcon id=\"close\" icon={faX} onClick={close}/> \n        <h1>Stats</h1>\n        <div id=\"barchart\">\n          <div id= \"barchart-bars-container\">\n            {yVals.map((y,i)=> <div className='barchart-bar' style={{height: `${100*y/getMaxValue(yVals)}%`, backgroundColor: `${i ==6 && \"red\"}`}} key={i}>{y? y:\"\"}</div>)}\n          </div>\n          <div id=\"barchart-labels-container\">\n            {xVals.map((x,i)=> <p className='barchart-label' key={i} style={{color: `${i ==6 && \"red\"}`}}>{x==\"X\"?\"X\":`${x}°`}</p>)}\n          </div>\n          <div id= \"specific-stats\">\n            <div id=\"nums-stats\">\n              <p>{getTotalPlays(yVals)}</p>\n              <p>{getTotalPlays(yVals.slice(0, yVals.length-1))}</p>\n              <p>{getTotalPlays(yVals) && Math.round(100*getTotalPlays(yVals.slice(0, yVals.length-1)) /getTotalPlays(yVals))}%</p>\n            </div>\n            <div id=\"nums-stats-labels\">\n              <p>Played</p>\n              <p>Won</p>\n              <p>Win Rate</p>\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default StatsPop"],"mappings":"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"},"metadata":{},"sourceType":"module"}