{"ast":null,"code":"import _slicedToArray from\"/home/ethanh/Desktop/reactjs/heardle20s/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{faMagnifyingGlass,faSquareXmark}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React,{useEffect}from'react';import{useState,useRef}from'react';import Player from\"./Player\";import raw from'../rsc/songs.txt';import useGlobal from'../hooks/useGlobal';import AdserraAdPopup from'./AdserraAdPopup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NUM_OF_BARS=6;var CUSTOM_WHITE=\"rgb(227, 227, 227)\";var GuessSong=function GuessSong(){var _searchRef$current;var _useGlobal=useGlobal(),correctSong=_useGlobal.correctSong,setIsCorrect=_useGlobal.setIsCorrect,setHasPlayedToday=_useGlobal.setHasPlayedToday,isPlaying=_useGlobal.isPlaying,setIsPlaying=_useGlobal.setIsPlaying,ytReady=_useGlobal.ytReady;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),songs=_useState2[0],setSongs=_useState2[1];var _useState3=useState(new Array(NUM_OF_BARS)),_useState4=_slicedToArray(_useState3,2),guesses=_useState4[0],setGuesses=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),guessNum=_useState6[0],setGuessNum=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentGuess=_useState8[0],setCurrentGuess=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),songMatches=_useState10[0],setSongMatches=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),searchBarFocused=_useState12[0],setSearchBarFocused=_useState12[1];var searchRef=useRef();useEffect(function(){fetch(raw).then(function(r){return r.text();}).then(function(text){var s=JSON.parse(text);setSongs(s);//setSongMatches(s)\n});var storedGuesses=JSON.parse(localStorage.getItem(\"guesses\"));if(!storedGuesses){setGuesses([\"\",\"\",\"\",\"\",\"\",\"\"]);return;}setGuessNum(getPrevGuessNum(storedGuesses));setGuesses(storedGuesses);},[]);var getPrevGuessNum=function getPrevGuessNum(sgs){for(var i=0;i<sgs.length;i++){if(sgs[i]==\"\")return i;}};//runs every time current guess changes (TODO: Searches for matches)\nuseEffect(function(){if(currentGuess==\"\"){return;}//TODO: make this more efficient with tree / linked list type structure of popping songs on and off it instead of searching through all songs every time\nsetSongMatches(songs.filter(function(obj){var s=obj.song.toLowerCase();var a=obj.artist.toLowerCase();var g=currentGuess.toLowerCase();return\"\".concat(s,\" - \").concat(a).includes(g);}));},[currentGuess]);useEffect(function(){localStorage.setItem(\"guesses\",JSON.stringify(guesses));},[guesses]);var updateGuessesArray=function updateGuessesArray(x){setGuesses(guesses.map(function(e,i){return i==guessNum?x:e;}));};var onSkip=function onSkip(){updateGuessesArray(\"SKIPPED\");setGuessNum(guessNum+1);};//this may not correctly work asynchronously\nvar onSubmit=function onSubmit(){var answer=correctSong.name+\" - \"+correctSong.artist;if(currentGuess===answer){setIsCorrect(true);setHasPlayedToday(true);localStorage.setItem(\"won-last\",true);updateStats(guessNum+1);setIsPlaying(true);return;}updateGuessesArray(currentGuess);setGuessNum(guessNum+1);setCurrentGuess(\"\");};//guess of \"X\" corresponds to failure to guess\nvar updateStats=function updateStats(g){var stats=JSON.parse(localStorage.getItem(\"scores\"));stats[g]+=1;localStorage.setItem(\"scores\",JSON.stringify(stats));};return/*#__PURE__*/_jsxs(\"div\",{id:\"guess-song-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bars\",children:guesses.map(function(g,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"guess-box \".concat(guessNum==i?\"active\":\"\"),children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{id:\"square-x-icon\",icon:faSquareXmark,className:guessNum<=i?\"invisible\":guesses[i]!=\"SKIPPED\"?\"incorrect\":\"\"}),/*#__PURE__*/_jsx(\"p\",{children:g})]},i);})}),/*#__PURE__*/_jsx(Player,{songID:correctSong.id,startOffset:correctSong.offset,guessNum:guessNum}),searchBarFocused&&/*#__PURE__*/_jsx(\"div\",{id:\"search-overlay\",onClick:function onClick(){return setSearchBarFocused(false);}}),/*#__PURE__*/_jsxs(\"div\",{id:\"guess-container\",style:searchBarFocused?{border:\"solid \".concat(CUSTOM_WHITE,\" 1px\")}:{},children:[currentGuess!=\"\"&&songMatches.length>0&&searchBarFocused&&/*#__PURE__*/_jsx(\"div\",{id:\"song-matches\",children:songMatches.slice(0,10).map(function(e,i){return/*#__PURE__*/_jsx(\"div\",{id:\"match\".concat(i),className:\"song-match\",onClick:function onClick(){setCurrentGuess(\"\".concat(e.song,\" - \").concat(e.artist));setSearchBarFocused(false);},children:\"\".concat(e.song,\" - \").concat(e.artist)},i);})}),/*#__PURE__*/_jsxs(\"div\",{id:\"search-songs\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"searchbar\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{id:\"search-icon\",icon:faMagnifyingGlass})}),/*#__PURE__*/_jsx(\"input\",{disabled:!ytReady,type:\"text\",id:\"searchbar\",ref:searchRef,autoComplete:\"off\",onChange:function onChange(e){return setCurrentGuess(e.target.value);},value:currentGuess,onFocus:function onFocus(){return setSearchBarFocused(true);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"submit-btns-container\",children:[/*#__PURE__*/_jsxs(\"button\",{id:\"skip\",onClick:onSkip,disabled:!ytReady,children:[\"Skip \",guessNum<5&&\"(+\".concat(guessNum+1,\"s)\")]}),/*#__PURE__*/_jsx(\"button\",{id:\"submit\",onClick:onSubmit,disabled:(searchRef===null||searchRef===void 0?void 0:(_searchRef$current=searchRef.current)===null||_searchRef$current===void 0?void 0:_searchRef$current.value)==\"\"||!ytReady,children:\"Submit\"})]})]});};export default GuessSong;","map":{"version":3,"names":["faMagnifyingGlass","faSquareXmark","FontAwesomeIcon","React","useEffect","useState","useRef","Player","raw","useGlobal","AdserraAdPopup","NUM_OF_BARS","CUSTOM_WHITE","GuessSong","correctSong","setIsCorrect","setHasPlayedToday","isPlaying","setIsPlaying","ytReady","songs","setSongs","Array","guesses","setGuesses","guessNum","setGuessNum","currentGuess","setCurrentGuess","songMatches","setSongMatches","searchBarFocused","setSearchBarFocused","searchRef","fetch","then","r","text","s","JSON","parse","storedGuesses","localStorage","getItem","getPrevGuessNum","sgs","i","length","filter","obj","song","toLowerCase","a","artist","g","includes","setItem","stringify","updateGuessesArray","x","map","e","onSkip","onSubmit","answer","name","updateStats","stats","id","offset","border","slice","target","value","current"],"sources":["/home/ethanh/Desktop/reactjs/heardle20s/src/components/GuessSong.js"],"sourcesContent":["import { faMagnifyingGlass, faSquareXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react'\nimport { useState, useRef } from 'react';\nimport Player from \"./Player\"\nimport raw from '../rsc/songs.txt';\nimport useGlobal from '../hooks/useGlobal';\nimport AdserraAdPopup from './AdserraAdPopup';\n\nconst NUM_OF_BARS = 6\nconst CUSTOM_WHITE = \"rgb(227, 227, 227)\"\nconst GuessSong = () => {\n\n  const {correctSong, setIsCorrect, setHasPlayedToday, isPlaying,setIsPlaying, ytReady} = useGlobal();\n\n  const [songs, setSongs] = useState([])\n  const [guesses, setGuesses] = useState(new Array(NUM_OF_BARS));\n  const [guessNum, setGuessNum] = useState(0)\n  const [currentGuess, setCurrentGuess] = useState(\"\")\n  const [songMatches, setSongMatches] = useState([])\n  const [searchBarFocused, setSearchBarFocused] = useState(false)\n\n  const searchRef = useRef();\n\n  useEffect(() =>{\n\n    fetch(raw)\n        .then(r => r.text())\n        .then(text => {\n          let s = JSON.parse(text);\n          setSongs(s);\n          //setSongMatches(s)\n        });\n    \n  \n    const storedGuesses = JSON.parse(localStorage.getItem(\"guesses\"));\n    if(!storedGuesses){\n      setGuesses([\"\",\"\",\"\",\"\",\"\",\"\"])\n      return\n    }\n\n    setGuessNum(getPrevGuessNum(storedGuesses))\n    setGuesses(storedGuesses)\n  }, [])\n\n  const getPrevGuessNum = (sgs) =>{\n    for (let i = 0; i<sgs.length; i++){\n      if (sgs[i] == \"\") return i;\n    }\n  }\n\n  //runs every time current guess changes (TODO: Searches for matches)\n  useEffect(() =>{\n    if(currentGuess == \"\"){\n      return;\n    }\n    //TODO: make this more efficient with tree / linked list type structure of popping songs on and off it instead of searching through all songs every time\n    setSongMatches(songs.filter(obj =>{\n      let s = obj.song.toLowerCase();\n      let a = obj.artist.toLowerCase(); \n      let g = currentGuess.toLowerCase();\n      return `${s} - ${a}`.includes(g);\n  }));\n  },[currentGuess])\n\n\n  useEffect(() =>{\n    localStorage.setItem(\"guesses\",JSON.stringify(guesses))\n  },[guesses])\n\n  const updateGuessesArray = (x) =>{\n    setGuesses(guesses.map((e,i) => {\n      return i == guessNum? x : e;\n    }))\n  }\n \n  const onSkip = () =>{\n    updateGuessesArray(\"SKIPPED\")\n    setGuessNum(guessNum + 1)\n  }\n\n  //this may not correctly work asynchronously\n  const onSubmit = () =>{\n    let answer = correctSong.name + \" - \" + correctSong.artist;\n    if(currentGuess === answer){\n      setIsCorrect(true)\n      setHasPlayedToday(true)\n      localStorage.setItem(\"won-last\",true)\n      updateStats(guessNum+1)\n      setIsPlaying(true)\n      return;\n    }\n    updateGuessesArray(currentGuess);\n    setGuessNum(guessNum + 1)\n    setCurrentGuess(\"\")\n  }\n\n  //guess of \"X\" corresponds to failure to guess\n  const updateStats = (g)=>{\n    const stats = JSON.parse(localStorage.getItem(\"scores\"))\n    stats[g] +=1\n    localStorage.setItem(\"scores\",JSON.stringify(stats));\n  }\n\n  return (\n    <div id=\"guess-song-container\">\n      <div className='bars'>\n        {guesses.map((g,i) =>{\n          return  <div className={`guess-box ${(guessNum == i) ? \"active\":\"\"}`} key={i}>\n            <FontAwesomeIcon id= \"square-x-icon\" icon = {faSquareXmark} className = {guessNum <= i ? \"invisible\" : (guesses[i] != \"SKIPPED\"? \"incorrect\":\"\")} /> \n            {/*className={currentGuess > i ? \"\":\"invisible\"}*/ }\n            <p>{g}</p>\n            </div>\n        })}\n      </div>\n      \n      <Player songID={correctSong.id} startOffset={correctSong.offset} guessNum={guessNum}/>\n\n      \n      \n      {searchBarFocused && <div id=\"search-overlay\" onClick={() => setSearchBarFocused(false)} />}\n\n      <div id=\"guess-container\" style={searchBarFocused? {  border: `solid ${CUSTOM_WHITE} 1px`} : {}}>\n        {currentGuess != \"\" && songMatches.length > 0 && searchBarFocused &&\n          <div id=\"song-matches\">\n            {songMatches.slice(0,10).map((e,i) =>\n            <div \n            id = {`match${i}`} \n            key={i} \n            className='song-match'\n            onClick = {() => {\n              setCurrentGuess(`${e.song} - ${e.artist}`)\n              setSearchBarFocused(false)\n            }}\n            >\n            {`${e.song} - ${e.artist}`}\n            </div>\n            )}\n          </div>\n        }\n        <div id=\"search-songs\" >\n          <label htmlFor=\"searchbar\">\n            <FontAwesomeIcon id=\"search-icon\" icon={faMagnifyingGlass} />\n          </label>\n          <input\n          disabled={!ytReady}\n          type=\"text\"\n          id=\"searchbar\"\n          ref={searchRef}\n          autoComplete=\"off\"\n          onChange={(e) => setCurrentGuess(e.target.value)}\n          value={currentGuess}\n          onFocus={() => setSearchBarFocused(true)}\n          />\n        </div>\n      </div>\n\n\n      <div id=\"submit-btns-container\">\n        <button id=\"skip\" onClick={onSkip} disabled={!ytReady} >Skip {guessNum <5 && `(+${guessNum+1}s)`}</button>\n        <button id=\"submit\" onClick = {onSubmit} disabled={searchRef?.current?.value ==\"\" || !ytReady}>Submit</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default GuessSong"],"mappings":"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"},"metadata":{},"sourceType":"module"}