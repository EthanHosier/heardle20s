{"ast":null,"code":"var _jsxFileName = \"/home/ethanh/Desktop/1.1.2010s-heardle/src/components/ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDTH_PERCENTAGES = {\n  0: 6.25,\n  1: 12.5,\n  2: 25,\n  3: 43.75,\n  4: 68.75,\n  5: 100\n};\nconst ProgressBar = _ref => {\n  _s();\n  let {\n    isPlaying,\n    guessNum,\n    duration\n  } = _ref;\n  //used to update elapsed time\n  const [intervalID, setIntervalID] = useState();\n  const [timeElapsed, setTimeElapsed] = useState();\n  useEffect(() => {\n    if (!isPlaying) {\n      setTimeElapsed(0);\n      if (intervalID) clearInterval(intervalID);\n      return;\n    }\n    let ms10 = 0;\n    setIntervalID(setInterval(() => setTimeElapsed(++ms10 / 10), 100));\n  }, [isPlaying]);\n  const getTimerFormat = totalSecs => {\n    let mins = Math.floor(totalSecs / 60);\n    let secs = Math.floor(totalSecs) % 60;\n    if (secs > 9) return `${mins}:${secs}`;else return `${mins}:0${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"grey-bar\",\n      style: {\n        width: `${guessNum === undefined ? 100 : WIDTH_PERCENTAGES[guessNum]}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-green\",\n      style: {\n        height: `${600 * timeElapsed / duration}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contents\",\n        children: guessNum !== undefined && [...Array(6)].map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `p${i}`,\n          className: \"partial-bar\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timers\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTimerFormat(timeElapsed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTimerFormat(duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"Sl1lyhe5V0aG0VKEWmsVSeakvKY=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","useEffect","WIDTH_PERCENTAGES","ProgressBar","isPlaying","guessNum","duration","intervalID","setIntervalID","timeElapsed","setTimeElapsed","clearInterval","ms10","setInterval","getTimerFormat","totalSecs","mins","Math","floor","secs","width","undefined","height","Array","map","x","i"],"sources":["/home/ethanh/Desktop/1.1.2010s-heardle/src/components/ProgressBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst WIDTH_PERCENTAGES = {\n  0:6.25,\n  1:12.5,\n  2:25,\n  3:43.75,\n  4:68.75,\n  5:100,\n}\n\nconst ProgressBar = ({isPlaying, guessNum,duration}) => {\n    //used to update elapsed time\n    const [intervalID,setIntervalID] = useState();\n    const [timeElapsed,setTimeElapsed] = useState();\n    \n\n    useEffect(() =>{\n    if(!isPlaying){\n      setTimeElapsed(0);\n      if(intervalID) clearInterval(intervalID);\n      return\n    }\n\n    let ms10 = 0;\n    setIntervalID(setInterval(()=>setTimeElapsed((++ms10)/10),100))\n  },[isPlaying])\n  \n    const getTimerFormat = (totalSecs)=>{\n        let mins = Math.floor(totalSecs/60)\n        let secs = Math.floor(totalSecs) % 60;\n\n        if (secs > 9) return `${mins}:${secs}`\n        else return `${mins}:0${secs}`\n    }\n\n    return (\n    <div id = \"progress\">\n      <div id=\"grey-bar\" style={{width:`${guessNum ===undefined? 100:WIDTH_PERCENTAGES[guessNum]}%`}}/>\n      <div id=\"progress-green\" style={{height:`${(600*timeElapsed /duration)}%`}}/>\n      <div id=\"progress-bar\">\n        <div id=\"contents\">\n          {guessNum !== undefined && [...Array(6)].map((x, i) =>\n             <div id={`p${i}`} key={i} className= \"partial-bar\"/>\n          )}\n        </div>\n      </div>\n      <div id=\"timers\">\n         <p>{getTimerFormat(timeElapsed)}</p>\n         <p>{getTimerFormat(duration)}</p>\n       </div>\n    </div>\n  )\n}\n\nexport default ProgressBar"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAElD,MAAMC,iBAAiB,GAAG;EACxB,CAAC,EAAC,IAAI;EACN,CAAC,EAAC,IAAI;EACN,CAAC,EAAC,EAAE;EACJ,CAAC,EAAC,KAAK;EACP,CAAC,EAAC,KAAK;EACP,CAAC,EAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAACC,SAAS;IAAEC,QAAQ;IAACC;EAAQ,CAAC;EAC/C;EACA,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGR,QAAQ,EAAE;EAC7C,MAAM,CAACS,WAAW,EAACC,cAAc,CAAC,GAAGV,QAAQ,EAAE;EAG/CC,SAAS,CAAC,MAAK;IACf,IAAG,CAACG,SAAS,EAAC;MACZM,cAAc,CAAC,CAAC,CAAC;MACjB,IAAGH,UAAU,EAAEI,aAAa,CAACJ,UAAU,CAAC;MACxC;IACF;IAEA,IAAIK,IAAI,GAAG,CAAC;IACZJ,aAAa,CAACK,WAAW,CAAC,MAAIH,cAAc,CAAE,EAAEE,IAAI,GAAE,EAAE,CAAC,EAAC,GAAG,CAAC,CAAC;EACjE,CAAC,EAAC,CAACR,SAAS,CAAC,CAAC;EAEZ,MAAMU,cAAc,GAAIC,SAAS,IAAG;IAChC,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAC,EAAE,CAAC;IACnC,IAAII,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC,GAAG,EAAE;IAErC,IAAII,IAAI,GAAG,CAAC,EAAE,OAAQ,GAAEH,IAAK,IAAGG,IAAK,EAAC,MACjC,OAAQ,GAAEH,IAAK,KAAIG,IAAK,EAAC;EAClC,CAAC;EAED,oBACA;IAAK,EAAE,EAAG,UAAU;IAAA,wBAClB;MAAK,EAAE,EAAC,UAAU;MAAC,KAAK,EAAE;QAACC,KAAK,EAAE,GAAEf,QAAQ,KAAIgB,SAAS,GAAE,GAAG,GAACnB,iBAAiB,CAACG,QAAQ,CAAE;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eACjG;MAAK,EAAE,EAAC,gBAAgB;MAAC,KAAK,EAAE;QAACiB,MAAM,EAAE,GAAG,GAAG,GAACb,WAAW,GAAEH,QAAU;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7E;MAAK,EAAE,EAAC,cAAc;MAAA,uBACpB;QAAK,EAAE,EAAC,UAAU;QAAA,UACfD,QAAQ,KAAKgB,SAAS,IAAI,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC/C;UAAK,EAAE,EAAG,IAAGA,CAAE,EAAE;UAAS,SAAS,EAAE;QAAa,GAA3BA,CAAC;UAAA;UAAA;UAAA;QAAA,QAA4B;MACtD;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,EAAE,EAAC,QAAQ;MAAA,wBACb;QAAA,UAAIZ,cAAc,CAACL,WAAW;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eACpC;QAAA,UAAIK,cAAc,CAACR,QAAQ;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GA1CKH,WAAW;AAAA,KAAXA,WAAW;AA4CjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}